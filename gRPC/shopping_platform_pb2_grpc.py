# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import shopping_platform_pb2 as shopping__platform__pb2


class SellerServiceStub(object):
    """Seller service definition
    service SellerService {
    rpc RegisterSeller(RegisterSellerRequest) returns (SellerResponse);
    rpc SellItem(SellItemRequest) returns (SellerResponse);
    rpc UpdateItem(UpdateItemRequest) returns (SellerResponse);
    rpc DeleteItem(DeleteItemRequest) returns (SellerResponse);
    rpc DisplaySellerItems(DisplayItemsRequest) returns (DisplayItemsResponse);
    rpc NotifySeller(ItemNotification) returns (Empty);
    }

    Seller service definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Login = channel.unary_unary(
                '/shopping_platform.SellerService/Login',
                request_serializer=shopping__platform__pb2.CheckSellerRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.CheckSellerResponse.FromString,
                )
        self.RegisterSeller = channel.unary_unary(
                '/shopping_platform.SellerService/RegisterSeller',
                request_serializer=shopping__platform__pb2.RegisterSellerRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.SellerResponse.FromString,
                )
        self.SellItem = channel.unary_unary(
                '/shopping_platform.SellerService/SellItem',
                request_serializer=shopping__platform__pb2.SellItemRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.SellerResponse.FromString,
                )
        self.UpdateItem = channel.unary_unary(
                '/shopping_platform.SellerService/UpdateItem',
                request_serializer=shopping__platform__pb2.UpdateItemRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.SellerResponse.FromString,
                )
        self.DeleteItem = channel.unary_unary(
                '/shopping_platform.SellerService/DeleteItem',
                request_serializer=shopping__platform__pb2.DeleteItemRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.SellerResponse.FromString,
                )
        self.DisplayItems = channel.unary_unary(
                '/shopping_platform.SellerService/DisplayItems',
                request_serializer=shopping__platform__pb2.DisplayItemsRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.DisplayItemsResponse.FromString,
                )
        self.NotifySeller = channel.unary_unary(
                '/shopping_platform.SellerService/NotifySeller',
                request_serializer=shopping__platform__pb2.Notification.SerializeToString,
                response_deserializer=shopping__platform__pb2.Empty.FromString,
                )


class SellerServiceServicer(object):
    """Seller service definition
    service SellerService {
    rpc RegisterSeller(RegisterSellerRequest) returns (SellerResponse);
    rpc SellItem(SellItemRequest) returns (SellerResponse);
    rpc UpdateItem(UpdateItemRequest) returns (SellerResponse);
    rpc DeleteItem(DeleteItemRequest) returns (SellerResponse);
    rpc DisplaySellerItems(DisplayItemsRequest) returns (DisplayItemsResponse);
    rpc NotifySeller(ItemNotification) returns (Empty);
    }

    Seller service definition
    """

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterSeller(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisplayItems(self, request, context):
        """Add this line
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifySeller(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SellerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=shopping__platform__pb2.CheckSellerRequest.FromString,
                    response_serializer=shopping__platform__pb2.CheckSellerResponse.SerializeToString,
            ),
            'RegisterSeller': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterSeller,
                    request_deserializer=shopping__platform__pb2.RegisterSellerRequest.FromString,
                    response_serializer=shopping__platform__pb2.SellerResponse.SerializeToString,
            ),
            'SellItem': grpc.unary_unary_rpc_method_handler(
                    servicer.SellItem,
                    request_deserializer=shopping__platform__pb2.SellItemRequest.FromString,
                    response_serializer=shopping__platform__pb2.SellerResponse.SerializeToString,
            ),
            'UpdateItem': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateItem,
                    request_deserializer=shopping__platform__pb2.UpdateItemRequest.FromString,
                    response_serializer=shopping__platform__pb2.SellerResponse.SerializeToString,
            ),
            'DeleteItem': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteItem,
                    request_deserializer=shopping__platform__pb2.DeleteItemRequest.FromString,
                    response_serializer=shopping__platform__pb2.SellerResponse.SerializeToString,
            ),
            'DisplayItems': grpc.unary_unary_rpc_method_handler(
                    servicer.DisplayItems,
                    request_deserializer=shopping__platform__pb2.DisplayItemsRequest.FromString,
                    response_serializer=shopping__platform__pb2.DisplayItemsResponse.SerializeToString,
            ),
            'NotifySeller': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifySeller,
                    request_deserializer=shopping__platform__pb2.Notification.FromString,
                    response_serializer=shopping__platform__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'shopping_platform.SellerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SellerService(object):
    """Seller service definition
    service SellerService {
    rpc RegisterSeller(RegisterSellerRequest) returns (SellerResponse);
    rpc SellItem(SellItemRequest) returns (SellerResponse);
    rpc UpdateItem(UpdateItemRequest) returns (SellerResponse);
    rpc DeleteItem(DeleteItemRequest) returns (SellerResponse);
    rpc DisplaySellerItems(DisplayItemsRequest) returns (DisplayItemsResponse);
    rpc NotifySeller(ItemNotification) returns (Empty);
    }

    Seller service definition
    """

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping_platform.SellerService/Login',
            shopping__platform__pb2.CheckSellerRequest.SerializeToString,
            shopping__platform__pb2.CheckSellerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterSeller(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping_platform.SellerService/RegisterSeller',
            shopping__platform__pb2.RegisterSellerRequest.SerializeToString,
            shopping__platform__pb2.SellerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SellItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping_platform.SellerService/SellItem',
            shopping__platform__pb2.SellItemRequest.SerializeToString,
            shopping__platform__pb2.SellerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping_platform.SellerService/UpdateItem',
            shopping__platform__pb2.UpdateItemRequest.SerializeToString,
            shopping__platform__pb2.SellerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping_platform.SellerService/DeleteItem',
            shopping__platform__pb2.DeleteItemRequest.SerializeToString,
            shopping__platform__pb2.SellerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisplayItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping_platform.SellerService/DisplayItems',
            shopping__platform__pb2.DisplayItemsRequest.SerializeToString,
            shopping__platform__pb2.DisplayItemsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NotifySeller(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping_platform.SellerService/NotifySeller',
            shopping__platform__pb2.Notification.SerializeToString,
            shopping__platform__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class BuyerServiceStub(object):
    """Buyer service definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterBuyer = channel.unary_unary(
                '/shopping_platform.BuyerService/RegisterBuyer',
                request_serializer=shopping__platform__pb2.RegisterBuyerRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.RegisterBuyerResponse.FromString,
                )
        self.SearchItem = channel.unary_unary(
                '/shopping_platform.BuyerService/SearchItem',
                request_serializer=shopping__platform__pb2.SearchItemRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.SearchItemResponse.FromString,
                )
        self.BuyItem = channel.unary_unary(
                '/shopping_platform.BuyerService/BuyItem',
                request_serializer=shopping__platform__pb2.BuyItemRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.BuyerResponse.FromString,
                )
        self.AddToWishlist = channel.unary_unary(
                '/shopping_platform.BuyerService/AddToWishlist',
                request_serializer=shopping__platform__pb2.AddToWishlistRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.BuyerResponse.FromString,
                )
        self.RateItem = channel.unary_unary(
                '/shopping_platform.BuyerService/RateItem',
                request_serializer=shopping__platform__pb2.RateItemRequest.SerializeToString,
                response_deserializer=shopping__platform__pb2.BuyerResponse.FromString,
                )
        self.NotifyBuyer = channel.unary_unary(
                '/shopping_platform.BuyerService/NotifyBuyer',
                request_serializer=shopping__platform__pb2.ItemNotification.SerializeToString,
                response_deserializer=shopping__platform__pb2.Empty.FromString,
                )


class BuyerServiceServicer(object):
    """Buyer service definition
    """

    def RegisterBuyer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuyItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddToWishlist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RateItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyBuyer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BuyerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterBuyer': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterBuyer,
                    request_deserializer=shopping__platform__pb2.RegisterBuyerRequest.FromString,
                    response_serializer=shopping__platform__pb2.RegisterBuyerResponse.SerializeToString,
            ),
            'SearchItem': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchItem,
                    request_deserializer=shopping__platform__pb2.SearchItemRequest.FromString,
                    response_serializer=shopping__platform__pb2.SearchItemResponse.SerializeToString,
            ),
            'BuyItem': grpc.unary_unary_rpc_method_handler(
                    servicer.BuyItem,
                    request_deserializer=shopping__platform__pb2.BuyItemRequest.FromString,
                    response_serializer=shopping__platform__pb2.BuyerResponse.SerializeToString,
            ),
            'AddToWishlist': grpc.unary_unary_rpc_method_handler(
                    servicer.AddToWishlist,
                    request_deserializer=shopping__platform__pb2.AddToWishlistRequest.FromString,
                    response_serializer=shopping__platform__pb2.BuyerResponse.SerializeToString,
            ),
            'RateItem': grpc.unary_unary_rpc_method_handler(
                    servicer.RateItem,
                    request_deserializer=shopping__platform__pb2.RateItemRequest.FromString,
                    response_serializer=shopping__platform__pb2.BuyerResponse.SerializeToString,
            ),
            'NotifyBuyer': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyBuyer,
                    request_deserializer=shopping__platform__pb2.ItemNotification.FromString,
                    response_serializer=shopping__platform__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'shopping_platform.BuyerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BuyerService(object):
    """Buyer service definition
    """

    @staticmethod
    def RegisterBuyer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping_platform.BuyerService/RegisterBuyer',
            shopping__platform__pb2.RegisterBuyerRequest.SerializeToString,
            shopping__platform__pb2.RegisterBuyerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping_platform.BuyerService/SearchItem',
            shopping__platform__pb2.SearchItemRequest.SerializeToString,
            shopping__platform__pb2.SearchItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuyItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping_platform.BuyerService/BuyItem',
            shopping__platform__pb2.BuyItemRequest.SerializeToString,
            shopping__platform__pb2.BuyerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddToWishlist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping_platform.BuyerService/AddToWishlist',
            shopping__platform__pb2.AddToWishlistRequest.SerializeToString,
            shopping__platform__pb2.BuyerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RateItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping_platform.BuyerService/RateItem',
            shopping__platform__pb2.RateItemRequest.SerializeToString,
            shopping__platform__pb2.BuyerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NotifyBuyer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/shopping_platform.BuyerService/NotifyBuyer',
            shopping__platform__pb2.ItemNotification.SerializeToString,
            shopping__platform__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
